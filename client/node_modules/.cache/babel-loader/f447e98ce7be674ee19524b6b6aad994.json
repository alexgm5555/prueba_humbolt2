{"ast":null,"code":"export var SHOW_COORDENATES = 'SHOW_COORDENATES';\nexport var ADD_COORDENATES = 'ADD_COORDENATES';\nexport function showCoordenates() {\n  return function (dispatch, getState) {\n    fetch('api/coordinate').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch({\n        type: SHOW_COORDENATES,\n        payload: data\n      });\n    });\n  };\n}\nexport function setCoordenates(e) {\n  console.log(e);\n  e.preventDefault();\n  fetch('/api/coordinate', {\n    method: 'POST',\n    body: JSON.stringify({\n      lat: parseFloat(e.lat),\n      lng: parseFloat(e.lng)\n    }),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    console.log(data);\n  }).catch(function (err) {\n    return console.error(err);\n  });\n  return function (dispatch, getState) {};\n}","map":{"version":3,"sources":["/Users/mac/Documents/node/react/react-web/example-create-react-app-express/client/src/actions/index.js"],"names":["SHOW_COORDENATES","ADD_COORDENATES","showCoordenates","dispatch","getState","fetch","then","res","json","data","type","payload","setCoordenates","e","console","log","preventDefault","method","body","JSON","stringify","lat","parseFloat","lng","headers","catch","err","error"],"mappings":"AACA,OAAO,IAAMA,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,SAASC,eAAT,GAA2B;AAC9B,SAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AACjCC,IAAAA,KAAK,CAAC,gBAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADb,EAEKF,IAFL,CAEU,UAAAG,IAAI,EAAI;AACVN,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEV,gBADD;AAELW,QAAAA,OAAO,EAAEF;AAFJ,OAAD,CAAR;AAIH,KAPL;AAQH,GATD;AAUH;AACD,OAAO,SAASG,cAAT,CAAwBC,CAAxB,EAA2B;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAA,EAAAA,CAAC,CAACG,cAAF;AACIX,EAAAA,KAAK,CAAC,iBAAD,EAAoB;AACrBY,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,GAAG,EAAEC,UAAU,CAACT,CAAC,CAACQ,GAAH,CADE;AAEjBE,MAAAA,GAAG,EAAED,UAAU,CAACT,CAAC,CAACU,GAAH;AAFE,KAAf,CAFe;AAMrBC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX;AANY,GAApB,CAAL,CAWKlB,IAXL,CAWU,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAXb,EAYKF,IAZL,CAYU,UAAAG,IAAI,EAAI;AACVK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEH,GAfL,EAgBKgB,KAhBL,CAgBW,UAAAC,GAAG;AAAA,WAAIZ,OAAO,CAACa,KAAR,CAAcD,GAAd,CAAJ;AAAA,GAhBd;AAiBJ,SAAO,UAAUvB,QAAV,EAAoBC,QAApB,EAA8B,CAEpC,CAFD;AAGH","sourcesContent":["\nexport const SHOW_COORDENATES = 'SHOW_COORDENATES'\nexport const ADD_COORDENATES = 'ADD_COORDENATES'\n\nexport function showCoordenates() {\n    return function (dispatch, getState) {\n        fetch('api/coordinate')\n            .then(res => res.json())\n            .then(data => {\n                dispatch({\n                    type: SHOW_COORDENATES,\n                    payload: data\n                })\n            });\n    }\n}\nexport function setCoordenates(e) {\n    console.log(e)\n    e.preventDefault();\n        fetch('/api/coordinate', {\n            method: 'POST',\n            body: JSON.stringify({\n                lat: parseFloat(e.lat),\n                lng: parseFloat(e.lng)\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                \n            })\n            .catch(err => console.error(err));\n    return function (dispatch, getState) {\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}