{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Documents/node/react/react-web/example-create-react-app-express/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/node/react/react-web/example-create-react-app-express/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Documents/node/react/react-web/example-create-react-app-express/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Documents/node/react/react-web/example-create-react-app-express/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/mac/Documents/node/react/react-web/example-create-react-app-express/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/mac/Documents/node/react/react-web/example-create-react-app-express/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Documents/node/react/react-web/example-create-react-app-express/client/src/components/Mapa.js\";\nimport { connect } from 'react-redux';\nimport React, { createRef, Component } from 'react';\nimport { Circle, CircleMarker, Map, Marker, Polygon, Popup, Rectangle, TileLayer, Tooltip } from 'react-leaflet';\nvar center = [4.620943145474099, -74.07446100531007];\nvar multiPolygon = [[[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]], [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]]];\nvar rectangle = [[51.49, -0.08], [51.5, -0.06]];\nexport var Mapa =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mapa, _Component);\n\n  function Mapa(props) {\n    var _this;\n\n    _classCallCheck(this, Mapa);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mapa).call(this, props));\n\n    _this.onClickCircle = function () {\n      _this.setState({\n        clicked: _this.state.clicked + 1\n      });\n    };\n\n    _this.handleClick = function (e) {\n      console.log(e); // const map = this.mapRef.current\n      // if (map != null) {\n      //     map.leafletElement.locate()\n      // }\n    };\n\n    _this.state = {\n      hasLocation: false,\n      latlng: {\n        lat: 4.650010884129616,\n        lng: -74.10284221172334\n      },\n      clicked: 0\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleLocationFound = _this.handleLocationFound.bind(_assertThisInitialized(_this));\n    _this.onClickCircle = _this.onClickCircle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Mapa, [{\n    key: \"handleLocationFound\",\n    value: function handleLocationFound(e) {\n      console.log(e + \"handleLocationFound\");\n      this.setState({\n        hasLocation: true,\n        latlng: e.latlng\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var clickedText = this.state.clicked === 0 ? 'Click this Circle to change the Tooltip text' : \"Circle click: \".concat(this.state.clicked);\n      var marker = this.state.hasLocation ? React.createElement(Marker, {\n        position: this.state.latlng,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"You are here\")) : null;\n      var marketList = this.props.coordenates.list.map(function (marker, key) {\n        console.log(_this2.props.coordenates.list[key].lat + 'lati');\n        console.log(parseFloat(_this2.props.coordenates.list[key].lng) * -1);\n        var lat = _this2.props.coordenates.list[key].lat;\n        var lngs = parseFloat(_this2.props.coordenates.list[key].lng) * -1;\n        return (// <Marker position={[4.620943145474099, -74.10284221172334>\n          React.createElement(Marker, {\n            position: [lat, -74.10284221172334],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(Popup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"You are ajsjahse\"))\n        );\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Map, {\n        center: center,\n        zoom: 12,\n        onClick: this.handleClick,\n        onLocationfound: this.handleLocationFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), marketList, React.createElement(Circle, {\n        center: center,\n        fillColor: \"blue\",\n        onClick: this.onClickCircle,\n        radius: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, clickedText)), React.createElement(CircleMarker, {\n        center: [51.51, -0.12],\n        color: \"red\",\n        radius: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Tooltip for CircleMarker\")), React.createElement(Marker, {\n        position: this.state.latlng,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Popup for Marker\"), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Tooltip for Marker\")), marketList, React.createElement(Polygon, {\n        color: \"purple\",\n        positions: multiPolygon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        sticky: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"sticky Tooltip for Polygon\")), React.createElement(Rectangle, {\n        bounds: rectangle,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        direction: \"bottom\",\n        offset: [0, 20],\n        opacity: 1,\n        permanent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"permanent Tooltip for Rectangle\"))));\n    }\n  }]);\n\n  return Mapa;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    coordenates: state.coordenates\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Mapa);","map":{"version":3,"sources":["/Users/mac/Documents/node/react/react-web/example-create-react-app-express/client/src/components/Mapa.js"],"names":["connect","React","createRef","Component","Circle","CircleMarker","Map","Marker","Polygon","Popup","Rectangle","TileLayer","Tooltip","center","multiPolygon","rectangle","Mapa","props","onClickCircle","setState","clicked","state","handleClick","e","console","log","hasLocation","latlng","lat","lng","bind","handleLocationFound","clickedText","marker","marketList","coordenates","list","map","key","parseFloat","lngs","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["\nimport { connect } from 'react-redux'\nimport React, { createRef, Component } from 'react'\nimport {\n    Circle,\n    CircleMarker,\n    Map,\n    Marker,\n    Polygon,\n    Popup,\n    Rectangle,\n    TileLayer,\n    Tooltip,\n} from 'react-leaflet'\nconst center = [4.620943145474099, -74.07446100531007]\n\nconst multiPolygon = [\n    [[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]],\n    [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]],\n]\n\nconst rectangle = [[51.49, -0.08], [51.5, -0.06]]\n\nexport class Mapa extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            hasLocation: false,\n            latlng: {\n                lat: 4.650010884129616,\n                lng: -74.10284221172334,\n            },\n            clicked: 0,\n        }\n        this.handleClick = this.handleClick.bind(this);\n\n        this.handleLocationFound = this.handleLocationFound.bind(this);\n        this.onClickCircle = this.onClickCircle.bind(this);\n\n    }\n    onClickCircle = () => {\n        this.setState({ clicked: this.state.clicked + 1 })\n    }\n\n    handleClick = (e) => {\n        console.log(e)\n        // const map = this.mapRef.current\n        // if (map != null) {\n        //     map.leafletElement.locate()\n        // }\n    }\n\n    handleLocationFound(e) {\n\n        console.log(e + \"handleLocationFound\")\n        this.setState({\n            hasLocation: true,\n            latlng: e.latlng,\n        })\n    }\n    componentDidMount() {\n        console.log(this)\n    }\n    render() {\n        \n        const clickedText =\n            this.state.clicked === 0\n                ? 'Click this Circle to change the Tooltip text'\n                : `Circle click: ${this.state.clicked}`\n        const marker = this.state.hasLocation ? (\n            <Marker position={this.state.latlng}>\n                <Popup>You are here</Popup>\n            </Marker>\n        ) : null\n        const marketList = this.props.coordenates.list.map((marker, key) => {\n            console.log(this.props.coordenates.list[key].lat+ 'lati')\n            console.log(parseFloat(this.props.coordenates.list[key].lng)*-1)\n            const lat = this.props.coordenates.list[key].lat\n            const lngs = parseFloat(this.props.coordenates.list[key].lng)*-1\n            return (\n\n                // <Marker position={[4.620943145474099, -74.10284221172334>\n                <Marker position={[lat, -74.10284221172334]}>\n                    <Popup>You are ajsjahse</Popup>\n                </Marker>\n            )\n        })\n        return (\n            <div >\n                <Map center={center} zoom={12}\n                    onClick={this.handleClick}\n                    onLocationfound={this.handleLocationFound}>\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    {marketList}\n                    <Circle\n                        center={center}\n                        fillColor=\"blue\"\n                        onClick={this.onClickCircle}\n                        radius={200}>\n                        <Tooltip>{clickedText}</Tooltip>\n                    </Circle>\n                    <CircleMarker center={[51.51, -0.12]} color=\"red\" radius={20}>\n                        <Tooltip>Tooltip for CircleMarker</Tooltip>\n                    </CircleMarker>\n                    <Marker position={this.state.latlng}>\n                        <Popup>Popup for Marker</Popup>\n                        <Tooltip>Tooltip for Marker</Tooltip>\n                    </Marker>\n                    {marketList}\n                    <Polygon color=\"purple\" positions={multiPolygon}>\n                        <Tooltip sticky>sticky Tooltip for Polygon</Tooltip>\n                    </Polygon>\n                    <Rectangle bounds={rectangle} color=\"black\">\n                        <Tooltip direction=\"bottom\" offset={[0, 20]} opacity={1} permanent>\n                            permanent Tooltip for Rectangle\n                        </Tooltip>\n                    </Rectangle>\n                </Map>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    coordenates: state.coordenates\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mapa)\n"]},"metadata":{},"sourceType":"module"}